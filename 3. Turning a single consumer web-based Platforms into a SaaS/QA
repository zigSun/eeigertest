Turning a single consumer web-based Platforms into a SaaS
A web-based gaming platform (=gPlatform) is currently providing it’s services to one single gaming site (=gSite).
The services provided by gPlatform to gSite include hosting web-games and backoffice for managing players that sign-up and play on gSite.

We want to make gPlatform into a SaaS that can be sold to other gaming sites as subscription-based service.

Each new gaming company operating a gaming site, will have it’s own dedicated domain - for example:
Company A will have a domain cool-games.com
Company B will have a domain luck-games.co.uk 
etc

Currently at gPlatform, users are identified by using email as a unique key. 

Q: How can we design the system in a way that every Company will be able to serve games on their gaming site from their domain?
A: We should move to multi-tenant design which should care about read-write isolation between tenants, we can create separate db schema for each tenant for logical isolation on one database.

Q: What modification should be done to the users table at gPlatform to support this change? 
A: In each schema will be separate sessions and users tables and other resources - so there is no need to put any changes to users table.

Q:Considering we have 1 backend cluster that serves all companies, how can we
  validate a user login on one gaming domain in such a way that it does 
  not give access to a different gaming domain? (i.e. authenticating on site A, grants access to site A only)
A: We can use signed JWT tokens which will be used for requests to our backend - JWT would contain tenant_id, which would resolving to needed schema, and middleware on backend would check and grant access based on that data